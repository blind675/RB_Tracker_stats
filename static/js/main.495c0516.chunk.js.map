{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","actionsOptions","label","value","App","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","locations","loading","selectedPoint","selectedActionAtPoint","_updatePoint","bind","assertThisInitialized","inherits","createClass","key","db","firebase","_reloadFirebaseData","_this2","setState","firestore","collection","get","then","dataSnapshot","data","docs","map","doc","objectSpread","id","catch","error","console","log","firebaseRef","newObject","update","alert","_this3","location","iconURL","react_default","a","createElement","dist","position","lat","latitude","lng","longitude","onClick","name","title","icon","url","length","google","zoom","style","mapStyles","initialCenter","_renderPoints","_this4","accuracy","uniqueId","concat","manufacturer","display","flex","flexDirection","react_select_browser_esm","options","onChange","Button_default","variant","hight","width","marginTop","_this5","marginLeft","_renderMap","disabled","margin","dataPartStyles","_renderSelectedPoint","Component","border","height","padding","backgroundColor","GoogleApiWrapper","libraries","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.495c0516.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import './App.css';\nimport Button from 'react-bootstrap/Button';\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react';\n\nimport Select from 'react-select';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport * as firebase from 'firebase';\n\nconst firebaseConfig = {\n\tapiKey: 'AIzaSyCzenI1WpO2JBbltc3ARFKTCJyUumY-zkk',\n\tauthDomain: 'rbtrack-ab0e9.firebaseapp.com',\n\tdatabaseURL: 'https://rbtrack-ab0e9.firebaseio.com',\n\tprojectId: 'rbtrack-ab0e9',\n\tstorageBucket: 'rbtrack-ab0e9.appspot.com',\n\tmessagingSenderId: '381452575978',\n\tappId: '1:381452575978:web:9999b9c4b6d38967',\n};\n\nconst actionsOptions = [\n\t{ label: '', value: null },\n\t{ label: 'Walk', value: 'walk' },\n\t{ label: 'Stay', value: 'stay' },\n\t{ label: 'Bike / e-Bike', value: 'bike' },\n\t{ label: 'Scooter', value: 'scooter' },\n\t{ label: 'e-Scooter', value: 'e-scooter' },\n\t{ label: 'e-Board', value: 'rb' },\n\t{ label: 'e-Board Bad Road', value: 'rb-bad' },\n];\n\nexport class App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tlocations: [],\n\t\t\tloading: false,\n\t\t\tselectedPoint: null,\n\t\t\tselectedActionAtPoint: null,\n\t\t};\n\n\t\tthis._updatePoint = this._updatePoint.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.db = firebase.initializeApp(firebaseConfig);\n\n\t\tthis._reloadFirebaseData();\n\t}\n\n\t_reloadFirebaseData() {\n\t\tthis.setState({\n\t\t\tloading: true,\n\t\t});\n\n\t\tthis.db\n\t\t\t.firestore()\n\t\t\t.collection('geo_points')\n\t\t\t.get()\n\t\t\t.then(dataSnapshot => {\n\t\t\t\tconst data = dataSnapshot.docs.map(doc => {\n\t\t\t\t\treturn { ...doc.data(), id: doc.id };\n\t\t\t\t});\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tloading: false,\n\t\t\t\t\tlocations: data,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tloading: false,\n\t\t\t\t\tlocations: [],\n\t\t\t\t});\n\n\t\t\t\tconsole.log('error:', error);\n\t\t\t});\n\t}\n\n\t_updatePoint() {\n\t\tif (this.state.selectedActionAtPoint) {\n\t\t\tconsole.log(' selected action points:', this.state.selectedActionAtPoint);\n\t\t\tconsole.log(' update point:', this.state.selectedPoint);\n\n\t\t\tconst firebaseRef = this.db.firestore().collection('geo_points').doc(this.state.selectedPoint.id);\n\n\t\t\tconsole.log(' firebaseRef:', firebaseRef);\n\n\t\t\tconst newObject = {\n\t\t\t\t...this.state.selectedPoint,\n\t\t\t\tlabel: this.state.selectedActionAtPoint.value,\n\t\t\t};\n\n\t\t\tconsole.log(' new object:', newObject);\n\n\t\t\tfirebaseRef.update(newObject);\n\t\t\t\n\t\t} else {\n\t\t\talert(' Please select an action did at a location. ');\n\t\t}\n\t}\n\n\t_renderPoints() {\n\t\treturn this.state.locations.map(location => {\n\t\t\tvar iconURL = 'http://maps.google.com/mapfiles/ms/icons/red-dot.png';\n\n\t\t\tswitch (location.label) {\n\t\t\t\tcase 'walk':\n\t\t\t\t\ticonURL = 'http://maps.google.com/mapfiles/kml/paddle/wht-blank-lv.png';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'stay':\n\t\t\t\t\ticonURL = 'http://maps.google.com/mapfiles/kml/paddle/wht-square-lv.png';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bike':\n\t\t\t\t\ticonURL = 'http://maps.google.com/mapfiles/kml/paddle/purple-circle-lv.png';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'scooter':\n\t\t\t\t\ticonURL = 'http://maps.google.com/mapfiles/kml/paddle/blu-circle-lv.png';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'e-scooter':\n\t\t\t\t\ticonURL = 'http://maps.google.com/mapfiles/kml/paddle/blu-stars-lv.png';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'rn':\n\t\t\t\t\ticonURL = 'http://maps.google.com/mapfiles/kml/paddle/grn-diamond-lv.png';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'rb-bad':\n\t\t\t\t\ticonURL = 'http://maps.google.com/mapfiles/kml/paddle/red-diamond-lv.png';\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\ticonURL = 'http://maps.google.com/mapfiles/ms/icons/red-dot.png';\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<Marker\n\t\t\t\t\tposition={{ lat: location.latitude, lng: location.longitude }}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tselectedPoint: location,\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t\tname={'Test'}\n\t\t\t\t\ttitle={'Test marker'}\n\t\t\t\t\tkey={location.id}\n\t\t\t\t\ticon={{ url: iconURL }}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\t}\n\n\t_renderMap() {\n\t\tif (this.state.locations.length !== 0) {\n\t\t\treturn (\n\t\t\t\t<Map\n\t\t\t\t\tgoogle={this.props.google}\n\t\t\t\t\tzoom={16}\n\t\t\t\t\tstyle={mapStyles}\n\t\t\t\t\tinitialCenter={{ lat: 45.757855, lng: 21.228995 }}\n\t\t\t\t>\n\t\t\t\t\t{this._renderPoints()}\n\t\t\t\t</Map>\n\t\t\t);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t_renderSelectedPoint() {\n\t\tif (this.state.selectedPoint) {\n\t\t\tif (this.state.selectedPoint.label) {\n\t\t\t\treturn (\n\t\t\t\t\t<form>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\tLatitude: {this.state.selectedPoint.latitude}{' '}\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\tLongitude: {this.state.selectedPoint.longitude}{' '}\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\tAccuracy: {this.state.selectedPoint.accuracy}{' '}\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\tUniqueId: {this.state.selectedPoint.uniqueId}{' '}\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t{`Manufacturer: ${this.state.selectedPoint.manufacturer}`}\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t{`Action did at location: ${this.state.selectedPoint.label}`}\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</form>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn (\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\tflex: 1,\n\t\t\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\tLatitude: {this.state.selectedPoint.latitude}{' '}\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\tLongitude: {this.state.selectedPoint.longitude}{' '}\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\tAccuracy: {this.state.selectedPoint.accuracy}{' '}\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\tUniqueId: {this.state.selectedPoint.uniqueId}{' '}\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t{`Manufacturer: ${this.state.selectedPoint.manufacturer}`}\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label>Select action did at location : </label>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\toptions={actionsOptions}\n\t\t\t\t\t\t\tonChange={value => {\n\t\t\t\t\t\t\t\tconsole.log('  value:', value);\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tselectedActionAtPoint: value,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\tonClick={this._updatePoint}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\thight: 60,\n\t\t\t\t\t\t\t\twidth: 200,\n\t\t\t\t\t\t\t\tmarginTop: 500,\n\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\tflex: 1,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tUpdate\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div style={{ display: 'flex' }}>\n\t\t\t\t<div style={{ display: 'flex', flexDirection: 'column' }}>\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t...mapStyles,\n\t\t\t\t\t\t\tmarginTop: 32,\n\t\t\t\t\t\t\tmarginLeft: 32,\n\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this._renderMap()}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\tdisabled={this.state.loading}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tthis._reloadFirebaseData();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tstyle={{ margin: 40 }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tReload\n\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t{this.state.loading ? 'loading...' : 'not loading'}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div style={dataPartStyles}>\n\t\t\t\t\t<h2 style={{ display: 'flex' }}>Selected Point</h2>\n\t\t\t\t\t{this._renderSelectedPoint()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst dataPartStyles = {\n\tmargin: 32,\n\tborder: '1px solid gray',\n\theight: 900,\n\tpadding: 12,\n};\n\nconst mapStyles = {\n\twidth: 800,\n\theight: 500,\n\tbackgroundColor: 'blue',\n};\n\nexport default GoogleApiWrapper({\n\tapiKey: 'AIzaSyArAl-k3E70PTxcFnFhKdilCW37KckQHBM',\n\tlibraries: ['visualization'],\n})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}